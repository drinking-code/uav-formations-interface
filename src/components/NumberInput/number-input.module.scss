@use 'src/utils/input-variables' as v;

.label {
  @extend %label;
}

.numberInput {
  width: v.$width;
  height: v.$height;

  margin-bottom: v.$ungrouped-margin;

  background: v.$background;
  color: currentColor;
  border-radius: v.$border-radius;

  overflow: hidden;

  transition: background-color .3s ease;

  &.focus {
    background: v.$background-active;
  }

  &.disabled {
    pointer-events: none;
    opacity: .6;
  }

  .innerWrapper {
    width: v.$width;
    height: v.$height;

    display: flex;
    justify-content: space-between;
    align-items: stretch;
  }

  .button, .input {
    appearance: none;
    background: none;
    border: none;
    color: currentColor;
  }

  $button-width: 3rem;

  .input {
    width: calc(#{v.$width} - #{$button-width} * 2);

    text-align: center;
    outline: none;

    z-index: 1;
  }

  $gradient: transparentize(white, .8), cubic-bezier(0, 0, .5, 1), transparent;
  $text-position: .9rem;
  $padding-bottom: .12rem;

  .button {
    position: relative;
    width: $button-width;
    height: 100%;

    padding: 0 0 $padding-bottom $text-position;
    text-align: left;

    cursor: pointer;
    opacity: .5;

    transition: opacity .3s ease;

    &:hover {
      opacity: 1;
    }

    &:after {
      content: '';
      position: absolute;
      height: 100%;
      width: 300%;
      left: 0;
      top: 0;

      transform: scaleX(.5);
      transform-origin: left;
      opacity: 0;

      transition: .3s ease;
      transition-property: transform, opacity;

      //noinspection CssInvalidFunction
      background: linear-gradient(to right, #{$gradient});
    }

    &:hover:after {
      transform: scaleX(1);
      opacity: .5;
    }

    &:active:after {
      opacity: 1;
      transition-duration: 0s;
    }
  }

  .add.button {
    padding: 0 $text-position $padding-bottom 0;
    text-align: right;

    &:after {
      left: auto;
      right: 0;

      transform-origin: right;

      //noinspection CssInvalidFunction
      background: linear-gradient(to left, #{$gradient});
    }
  }
}
